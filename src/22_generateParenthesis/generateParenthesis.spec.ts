import { generateParenthesis } from "./generateParenthesis";

test("generateParenthesis 1", () => {
  const res = generateParenthesis(1);
  const result = ["()"];

  expect(res).toEqual(expect.arrayContaining(result));
  expect(res.length).toBe(result.length);
});

test("generateParenthesis 2", () => {
  const res = generateParenthesis(2);
  const result = ["()()", "(())"];

  expect(res).toEqual(expect.arrayContaining(result));
  expect(res.length).toBe(result.length);
});

test("generateParenthesis 3", () => {
  const res = generateParenthesis(3);
  const result = ["((()))", "(()())", "(())()", "()(())", "()()()"];

  expect(res).toEqual(expect.arrayContaining(result));
  expect(res.length).toBe(result.length);
});

test("generateParenthesis 4", () => {
  const res = generateParenthesis(4);
  const result = [
    "(((())))",
    "((()()))",
    "((())())",
    "((()))()",
    "(()(()))",
    "(()()())",
    "(()())()",
    "(())(())",
    "(())()()",
    "()((()))",
    "()(()())",
    "()(())()",
    "()()(())",
    "()()()()",
  ];

  expect(res).toEqual(expect.arrayContaining(result));
  expect(res.length).toBe(result.length);
});

test("generateParenthesis 5", () => {
  const res = generateParenthesis(5);
  const result = [
    "((((()))))",
    "(((()())))",
    "(((())()))",
    "(((()))())",
    "(((())))()",
    "((()(())))",
    "((()()()))",
    "((()())())",
    "((()()))()",
    "((())(()))",
    "((())()())",
    "((())())()",
    "((()))(())",
    "((()))()()",
    "(()((())))",
    "(()(()()))",
    "(()(())())",
    "(()(()))()",
    "(()()(()))",
    "(()()()())",
    "(()()())()",
    "(()())(())",
    "(()())()()",
    "(())((()))",
    "(())(()())",
    "(())(())()",
    "(())()(())",
    "(())()()()",
    "()(((())))",
    "()((()()))",
    "()((())())",
    "()((()))()",
    "()(()(()))",
    "()(()()())",
    "()(()())()",
    "()(())(())",
    "()(())()()",
    "()()((()))",
    "()()(()())",
    "()()(())()",
    "()()()(())",
    "()()()()()",
  ];

  expect(res).toEqual(expect.arrayContaining(result));
  expect(res.length).toBe(result.length);
});

test("generateParenthesis 7", () => {
  const res = generateParenthesis(7);
  const result = [
    "((((((()))))))",
    "(((((()())))))",
    "(((((())()))))",
    "(((((()))())))",
    "(((((())))()))",
    "(((((()))))())",
    "(((((())))))()",
    "((((()(())))))",
    "((((()()()))))",
    "((((()())())))",
    "((((()()))()))",
    "((((()())))())",
    "((((()()))))()",
    "((((())(()))))",
    "((((())()())))",
    "((((())())()))",
    "((((())()))())",
    "((((())())))()",
    "((((()))(())))",
    "((((()))()()))",
    "((((()))())())",
    "((((()))()))()",
    "((((())))(()))",
    "((((())))()())",
    "((((())))())()",
    "((((()))))(())",
    "((((()))))()()",
    "(((()((())))))",
    "(((()(()()))))",
    "(((()(())())))",
    "(((()(()))()))",
    "(((()(())))())",
    "(((()(()))))()",
    "(((()()(()))))",
    "(((()()()())))",
    "(((()()())()))",
    "(((()()()))())",
    "(((()()())))()",
    "(((()())(())))",
    "(((()())()()))",
    "(((()())())())",
    "(((()())()))()",
    "(((()()))(()))",
    "(((()()))()())",
    "(((()()))())()",
    "(((()())))(())",
    "(((()())))()()",
    "(((())((()))))",
    "(((())(()())))",
    "(((())(())()))",
    "(((())(()))())",
    "(((())(())))()",
    "(((())()(())))",
    "(((())()()()))",
    "(((())()())())",
    "(((())()()))()",
    "(((())())(()))",
    "(((())())()())",
    "(((())())())()",
    "(((())()))(())",
    "(((())()))()()",
    "(((()))((())))",
    "(((()))(()()))",
    "(((()))(())())",
    "(((()))(()))()",
    "(((()))()(()))",
    "(((()))()()())",
    "(((()))()())()",
    "(((()))())(())",
    "(((()))())()()",
    "(((())))((()))",
    "(((())))(()())",
    "(((())))(())()",
    "(((())))()(())",
    "(((())))()()()",
    "((()(((())))))",
    "((()((()()))))",
    "((()((())())))",
    "((()((()))()))",
    "((()((())))())",
    "((()((()))))()",
    "((()(()(()))))",
    "((()(()()())))",
    "((()(()())()))",
    "((()(()()))())",
    "((()(()())))()",
    "((()(())(())))",
    "((()(())()()))",
    "((()(())())())",
    "((()(())()))()",
    "((()(()))(()))",
    "((()(()))()())",
    "((()(()))())()",
    "((()(())))(())",
    "((()(())))()()",
    "((()()((()))))",
    "((()()(()())))",
    "((()()(())()))",
    "((()()(()))())",
    "((()()(())))()",
    "((()()()(())))",
    "((()()()()()))",
    "((()()()())())",
    "((()()()()))()",
    "((()()())(()))",
    "((()()())()())",
    "((()()())())()",
    "((()()()))(())",
    "((()()()))()()",
    "((()())((())))",
    "((()())(()()))",
    "((()())(())())",
    "((()())(()))()",
    "((()())()(()))",
    "((()())()()())",
    "((()())()())()",
    "((()())())(())",
    "((()())())()()",
    "((()()))((()))",
    "((()()))(()())",
    "((()()))(())()",
    "((()()))()(())",
    "((()()))()()()",
    "((())(((()))))",
    "((())((()())))",
    "((())((())()))",
    "((())((()))())",
    "((())((())))()",
    "((())(()(())))",
    "((())(()()()))",
    "((())(()())())",
    "((())(()()))()",
    "((())(())(()))",
    "((())(())()())",
    "((())(())())()",
    "((())(()))(())",
    "((())(()))()()",
    "((())()((())))",
    "((())()(()()))",
    "((())()(())())",
    "((())()(()))()",
    "((())()()(()))",
    "((())()()()())",
    "((())()()())()",
    "((())()())(())",
    "((())()())()()",
    "((())())((()))",
    "((())())(()())",
    "((())())(())()",
    "((())())()(())",
    "((())())()()()",
    "((()))(((())))",
    "((()))((()()))",
    "((()))((())())",
    "((()))((()))()",
    "((()))(()(()))",
    "((()))(()()())",
    "((()))(()())()",
    "((()))(())(())",
    "((()))(())()()",
    "((()))()((()))",
    "((()))()(()())",
    "((()))()(())()",
    "((()))()()(())",
    "((()))()()()()",
    "(()((((())))))",
    "(()(((()()))))",
    "(()(((())())))",
    "(()(((()))()))",
    "(()(((())))())",
    "(()(((()))))()",
    "(()((()(()))))",
    "(()((()()())))",
    "(()((()())()))",
    "(()((()()))())",
    "(()((()())))()",
    "(()((())(())))",
    "(()((())()()))",
    "(()((())())())",
    "(()((())()))()",
    "(()((()))(()))",
    "(()((()))()())",
    "(()((()))())()",
    "(()((())))(())",
    "(()((())))()()",
    "(()(()((()))))",
    "(()(()(()())))",
    "(()(()(())()))",
    "(()(()(()))())",
    "(()(()(())))()",
    "(()(()()(())))",
    "(()(()()()()))",
    "(()(()()())())",
    "(()(()()()))()",
    "(()(()())(()))",
    "(()(()())()())",
    "(()(()())())()",
    "(()(()()))(())",
    "(()(()()))()()",
    "(()(())((())))",
    "(()(())(()()))",
    "(()(())(())())",
    "(()(())(()))()",
    "(()(())()(()))",
    "(()(())()()())",
    "(()(())()())()",
    "(()(())())(())",
    "(()(())())()()",
    "(()(()))((()))",
    "(()(()))(()())",
    "(()(()))(())()",
    "(()(()))()(())",
    "(()(()))()()()",
    "(()()(((()))))",
    "(()()((()())))",
    "(()()((())()))",
    "(()()((()))())",
    "(()()((())))()",
    "(()()(()(())))",
    "(()()(()()()))",
    "(()()(()())())",
    "(()()(()()))()",
    "(()()(())(()))",
    "(()()(())()())",
    "(()()(())())()",
    "(()()(()))(())",
    "(()()(()))()()",
    "(()()()((())))",
    "(()()()(()()))",
    "(()()()(())())",
    "(()()()(()))()",
    "(()()()()(()))",
    "(()()()()()())",
    "(()()()()())()",
    "(()()()())(())",
    "(()()()())()()",
    "(()()())((()))",
    "(()()())(()())",
    "(()()())(())()",
    "(()()())()(())",
    "(()()())()()()",
    "(()())(((())))",
    "(()())((()()))",
    "(()())((())())",
    "(()())((()))()",
    "(()())(()(()))",
    "(()())(()()())",
    "(()())(()())()",
    "(()())(())(())",
    "(()())(())()()",
    "(()())()((()))",
    "(()())()(()())",
    "(()())()(())()",
    "(()())()()(())",
    "(()())()()()()",
    "(())((((()))))",
    "(())(((()())))",
    "(())(((())()))",
    "(())(((()))())",
    "(())(((())))()",
    "(())((()(())))",
    "(())((()()()))",
    "(())((()())())",
    "(())((()()))()",
    "(())((())(()))",
    "(())((())()())",
    "(())((())())()",
    "(())((()))(())",
    "(())((()))()()",
    "(())(()((())))",
    "(())(()(()()))",
    "(())(()(())())",
    "(())(()(()))()",
    "(())(()()(()))",
    "(())(()()()())",
    "(())(()()())()",
    "(())(()())(())",
    "(())(()())()()",
    "(())(())((()))",
    "(())(())(()())",
    "(())(())(())()",
    "(())(())()(())",
    "(())(())()()()",
    "(())()(((())))",
    "(())()((()()))",
    "(())()((())())",
    "(())()((()))()",
    "(())()(()(()))",
    "(())()(()()())",
    "(())()(()())()",
    "(())()(())(())",
    "(())()(())()()",
    "(())()()((()))",
    "(())()()(()())",
    "(())()()(())()",
    "(())()()()(())",
    "(())()()()()()",
    "()(((((())))))",
    "()((((()()))))",
    "()((((())())))",
    "()((((()))()))",
    "()((((())))())",
    "()((((()))))()",
    "()(((()(()))))",
    "()(((()()())))",
    "()(((()())()))",
    "()(((()()))())",
    "()(((()())))()",
    "()(((())(())))",
    "()(((())()()))",
    "()(((())())())",
    "()(((())()))()",
    "()(((()))(()))",
    "()(((()))()())",
    "()(((()))())()",
    "()(((())))(())",
    "()(((())))()()",
    "()((()((()))))",
    "()((()(()())))",
    "()((()(())()))",
    "()((()(()))())",
    "()((()(())))()",
    "()((()()(())))",
    "()((()()()()))",
    "()((()()())())",
    "()((()()()))()",
    "()((()())(()))",
    "()((()())()())",
    "()((()())())()",
    "()((()()))(())",
    "()((()()))()()",
    "()((())((())))",
    "()((())(()()))",
    "()((())(())())",
    "()((())(()))()",
    "()((())()(()))",
    "()((())()()())",
    "()((())()())()",
    "()((())())(())",
    "()((())())()()",
    "()((()))((()))",
    "()((()))(()())",
    "()((()))(())()",
    "()((()))()(())",
    "()((()))()()()",
    "()(()(((()))))",
    "()(()((()())))",
    "()(()((())()))",
    "()(()((()))())",
    "()(()((())))()",
    "()(()(()(())))",
    "()(()(()()()))",
    "()(()(()())())",
    "()(()(()()))()",
    "()(()(())(()))",
    "()(()(())()())",
    "()(()(())())()",
    "()(()(()))(())",
    "()(()(()))()()",
    "()(()()((())))",
    "()(()()(()()))",
    "()(()()(())())",
    "()(()()(()))()",
    "()(()()()(()))",
    "()(()()()()())",
    "()(()()()())()",
    "()(()()())(())",
    "()(()()())()()",
    "()(()())((()))",
    "()(()())(()())",
    "()(()())(())()",
    "()(()())()(())",
    "()(()())()()()",
    "()(())(((())))",
    "()(())((()()))",
    "()(())((())())",
    "()(())((()))()",
    "()(())(()(()))",
    "()(())(()()())",
    "()(())(()())()",
    "()(())(())(())",
    "()(())(())()()",
    "()(())()((()))",
    "()(())()(()())",
    "()(())()(())()",
    "()(())()()(())",
    "()(())()()()()",
    "()()((((()))))",
    "()()(((()())))",
    "()()(((())()))",
    "()()(((()))())",
    "()()(((())))()",
    "()()((()(())))",
    "()()((()()()))",
    "()()((()())())",
    "()()((()()))()",
    "()()((())(()))",
    "()()((())()())",
    "()()((())())()",
    "()()((()))(())",
    "()()((()))()()",
    "()()(()((())))",
    "()()(()(()()))",
    "()()(()(())())",
    "()()(()(()))()",
    "()()(()()(()))",
    "()()(()()()())",
    "()()(()()())()",
    "()()(()())(())",
    "()()(()())()()",
    "()()(())((()))",
    "()()(())(()())",
    "()()(())(())()",
    "()()(())()(())",
    "()()(())()()()",
    "()()()(((())))",
    "()()()((()()))",
    "()()()((())())",
    "()()()((()))()",
    "()()()(()(()))",
    "()()()(()()())",
    "()()()(()())()",
    "()()()(())(())",
    "()()()(())()()",
    "()()()()((()))",
    "()()()()(()())",
    "()()()()(())()",
    "()()()()()(())",
    "()()()()()()()",
  ];
  expect(res).toEqual(expect.arrayContaining(result));
  expect(res.length).toBe(result.length);
});
